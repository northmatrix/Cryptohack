

# This file was *autogenerated* from the file crackthatcurve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_310717010502520989590157367261876774703 = Integer(310717010502520989590157367261876774703); _sage_const_179210853392303317793440285562762725654 = Integer(179210853392303317793440285562762725654); _sage_const_105268671499942631758568591033409611165 = Integer(105268671499942631758568591033409611165); _sage_const_272640099140026426377756188075937988094 = Integer(272640099140026426377756188075937988094); _sage_const_51062462309521034358726608268084433317 = Integer(51062462309521034358726608268084433317); _sage_const_280810182131414898730378982766101210916 = Integer(280810182131414898730378982766101210916); _sage_const_291506490768054478159835604632710368904 = Integer(291506490768054478159835604632710368904)# This is for a Weistersass curve of the form 
# Y^2 = X^3 + aX + b mod p 

a = _sage_const_2 
b = _sage_const_3 
p = _sage_const_310717010502520989590157367261876774703  


# Generator point 
G_x = _sage_const_179210853392303317793440285562762725654 
G_y = _sage_const_105268671499942631758568591033409611165 

# Bobs public key
Qb_x = _sage_const_272640099140026426377756188075937988094  
Qb_y = _sage_const_51062462309521034358726608268084433317 

# Senders public key 
Qs_x = _sage_const_280810182131414898730378982766101210916 
Qs_y = _sage_const_291506490768054478159835604632710368904 

# Now lets write some sage code to solve this 
F = GF(p) # define the fininte field 
E = EllipticCurve(F,[a,b]) # define the elliptic curve
G = E(G_x,G_y) # define generator
Qb = E(Qb_x,Qb_y) # define bobs public key
Qs = E(Qs_x,Qs_y) # define senders public key

n = discrete_log(Qs,G,operation='+')
print("N: ", n)



